(ns ${1:`Snippet_InsertClojureNs()`}
 (:require [clojure-hadoop.gen :as gen]
           [clojure-hadoop.imports :as imp])
  (:use
    [clojure-hadoop.config :only (conf)])
 )

(imp/import-fs)
(imp/import-io)
(imp/import-mapreduce)
(imp/import-mapreduce-lib)
(gen/gen-job-classes)
(gen/gen-main-method)


(defn mapper-map [this ^Text key ^LongWritable value ^MapContext context]
  )

(defn reducer-reduce [this ^Text key values ^ReduceContext context]
  )

(defn tool-run
  "This creates a main function that can be invoked in emr "
  [^Tool this args]
  (let [[{:keys [input output]} args banner] (c/args-parse args) ]
    (doto (Job.)
      (.setJarByClass (.getClass this))
      (conf :name "")
      (conf :output-key "org.apache.hadoop.io.Text")
      (conf :output-value "org.apache.hadoop.io.LongWritable")
      (conf :map "${1:`Snippet_InsertClojureNs()`}_mapper")
      (conf :reduce "${1:`Snippet_InsertClojureNs()`}_reduce")
      (conf :input-format "seq")
      (conf :output-format "seq")
      (conf :input input)
      (conf :output output)
      (conf :compress-output false)
      (.waitForCompletion false))) 0)

